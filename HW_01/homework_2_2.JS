undefined + 1;
// результат:NaN
// пояснення: undefined перетворюється в NaN. будь які операції з NaN повертають NaN
'true' == true
// результат:false
// пояснення:'true' це рядок він не дорівнює 1 тому false
false == 'false'
// результат:false
// пояснення:false це 0,він не дорівнює рядку 'false',тому результат false
null == ''
// результат:false
// пояснення: null може дорівнювати тільки самому собі або undefined
3 ** (9 / 3);
// результат:27
// пояснення:9 ділимо на 3=3, 3 в 3 степені =27
!!'false' == !!'true'
// результат:true
// пояснення:Логічне або повертає
// true
// якщо
// хоча б один
// з операндів
// true.в прикладі 2 рядка, отже 2 true
0 || '0' && 1
результат:1
пояснення:повертає останнє тру значення
1 < 2 < 3
// результат:true
// пояснення: цифра 1 меньша за 2,цифра 2 меньша за 3= вірно
'foo'+ + +'bar'
// результат:fooNaNтає 
// пояснення: якщо бінарний оператор + застосовувати до рядка('foo','bar'), то він їх складає в рядок
3 ** 2 / 3;
// результат:3
// пояснення:3 в 2-й степені =9 9/3=3
1 < 2 > 3
// результат:false
// пояснення: цифра 1 меньша за 2,2  більше 3-це невірно тому що 2 менбше 3 =невірно
(+null == false) < 1;
результат:false
пояснення:
false && true || true
результат:true
пояснення:
false && (true || true);
результат:false 
пояснення:
(+null == false) < 1 ** 5;
результат:false 
пояснення